// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0-devel
// 	protoc        (unknown)
// source: github.com/kralicky/jobserver/pkg/apis/rbac/v1/rbac.proto

package rbacv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Scope int32

const (
	Scope_NONE         Scope = 0 // the method does not have scope semantics
	Scope_CURRENT_USER Scope = 1 // default, allows access to jobs created by the current user
	Scope_ALL_USERS    Scope = 2 // allows access to jobs created by any user
)

// Enum value maps for Scope.
var (
	Scope_name = map[int32]string{
		0: "NONE",
		1: "CURRENT_USER",
		2: "ALL_USERS",
	}
	Scope_value = map[string]int32{
		"NONE":         0,
		"CURRENT_USER": 1,
		"ALL_USERS":    2,
	}
)

func (x Scope) Enum() *Scope {
	p := new(Scope)
	*p = x
	return p
}

func (x Scope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Scope) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_enumTypes[0].Descriptor()
}

func (Scope) Type() protoreflect.EnumType {
	return &file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_enumTypes[0]
}

func (x Scope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Scope.Descriptor instead.
func (Scope) EnumDescriptor() ([]byte, []int) {
	return file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_rawDescGZIP(), []int{0}
}

// Describes a complete RBAC configuration.
type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of available roles.
	Roles []*Role `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
	// A list of available role bindings.
	RoleBindings []*RoleBinding `protobuf:"bytes,3,rep,name=role_bindings,json=roleBindings,proto3" json:"role_bindings,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *Config) GetRoleBindings() []*RoleBinding {
	if x != nil {
		return x.RoleBindings
	}
	return nil
}

// Describes a role that allows access to methods within a service.
type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An arbitrary unique identifier for the role.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The service name to which the role applies. Should be qualified to
	// the full package name of the service, not including '/' separators.
	// For example, `service Foo` in `package bar.baz` should be "bar.baz.Foo".
	Service string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	// A list of methods that the role allows access to. The method names must
	// not be qualified with the service name. All methods must exist in the
	// named service. For example, `rpc Bar` in `service Foo` should be "Bar".
	AllowedMethods []*AllowedMethod `protobuf:"bytes,3,rep,name=allowed_methods,json=allowedMethods,proto3" json:"allowed_methods,omitempty"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_rawDescGZIP(), []int{1}
}

func (x *Role) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Role) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *Role) GetAllowedMethods() []*AllowedMethod {
	if x != nil {
		return x.AllowedMethods
	}
	return nil
}

type AllowedMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the method.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The scope that the method applies to (all users, or current user)
	Scope *Scope `protobuf:"varint,2,opt,name=scope,proto3,enum=rbac.v1.Scope,oneof" json:"scope,omitempty"`
}

func (x *AllowedMethod) Reset() {
	*x = AllowedMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllowedMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowedMethod) ProtoMessage() {}

func (x *AllowedMethod) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowedMethod.ProtoReflect.Descriptor instead.
func (*AllowedMethod) Descriptor() ([]byte, []int) {
	return file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_rawDescGZIP(), []int{2}
}

func (x *AllowedMethod) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AllowedMethod) GetScope() Scope {
	if x != nil && x.Scope != nil {
		return *x.Scope
	}
	return Scope_NONE
}

// Describes a role binding, associating a single role with one or more users.
type RoleBinding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An arbitrary unique identifier for the role binding.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// An existing role id.
	RoleId string `protobuf:"bytes,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// A list of users (usernames/emails) that the role applies to.
	Users []string `protobuf:"bytes,3,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *RoleBinding) Reset() {
	*x = RoleBinding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleBinding) ProtoMessage() {}

func (x *RoleBinding) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleBinding.ProtoReflect.Descriptor instead.
func (*RoleBinding) Descriptor() ([]byte, []int) {
	return file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_rawDescGZIP(), []int{3}
}

func (x *RoleBinding) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoleBinding) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *RoleBinding) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

type ScopeOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether scope semantics are enabled for this method.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *ScopeOptions) Reset() {
	*x = ScopeOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScopeOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScopeOptions) ProtoMessage() {}

func (x *ScopeOptions) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScopeOptions.ProtoReflect.Descriptor instead.
func (*ScopeOptions) Descriptor() ([]byte, []int) {
	return file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_rawDescGZIP(), []int{4}
}

func (x *ScopeOptions) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

var file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*ScopeOptions)(nil),
		Field:         50000,
		Name:          "rbac.v1.scope",
		Tag:           "bytes,50000,opt,name=scope",
		Filename:      "github.com/kralicky/jobserver/pkg/apis/rbac/v1/rbac.proto",
	},
}

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional rbac.v1.ScopeOptions scope = 50000;
	E_Scope = &file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_extTypes[0]
)

var File_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto protoreflect.FileDescriptor

var file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_rawDesc = []byte{
	0x0a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x72, 0x61,
	0x6c, 0x69, 0x63, 0x6b, 0x79, 0x2f, 0x6a, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2f, 0x76, 0x31,
	0x2f, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x62, 0x61,
	0x63, 0x2e, 0x76, 0x31, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x68, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x23, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0d, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x62, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72,
	0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x0c, 0x72, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73,
	0x22, 0x71, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x62,
	0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x73, 0x22, 0x58, 0x0a, 0x0d, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x4c, 0x0a,
	0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x28, 0x0a, 0x0c, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x2a, 0x32, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x55, 0x52, 0x52,
	0x45, 0x4e, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x4c,
	0x4c, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x53, 0x10, 0x02, 0x3a, 0x4d, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xd0, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x62, 0x61,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x72, 0x61, 0x6c, 0x69, 0x63, 0x6b, 0x79, 0x2f,
	0x6a, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2f, 0x76, 0x31, 0x3b, 0x72, 0x62, 0x61, 0x63, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_rawDescOnce sync.Once
	file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_rawDescData = file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_rawDesc
)

func file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_rawDescGZIP() []byte {
	file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_rawDescOnce.Do(func() {
		file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_rawDescData)
	})
	return file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_rawDescData
}

var file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_goTypes = []interface{}{
	(Scope)(0),                         // 0: rbac.v1.Scope
	(*Config)(nil),                     // 1: rbac.v1.Config
	(*Role)(nil),                       // 2: rbac.v1.Role
	(*AllowedMethod)(nil),              // 3: rbac.v1.AllowedMethod
	(*RoleBinding)(nil),                // 4: rbac.v1.RoleBinding
	(*ScopeOptions)(nil),               // 5: rbac.v1.ScopeOptions
	(*descriptorpb.MethodOptions)(nil), // 6: google.protobuf.MethodOptions
}
var file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_depIdxs = []int32{
	2, // 0: rbac.v1.Config.roles:type_name -> rbac.v1.Role
	4, // 1: rbac.v1.Config.role_bindings:type_name -> rbac.v1.RoleBinding
	3, // 2: rbac.v1.Role.allowed_methods:type_name -> rbac.v1.AllowedMethod
	0, // 3: rbac.v1.AllowedMethod.scope:type_name -> rbac.v1.Scope
	6, // 4: rbac.v1.scope:extendee -> google.protobuf.MethodOptions
	5, // 5: rbac.v1.scope:type_name -> rbac.v1.ScopeOptions
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	5, // [5:6] is the sub-list for extension type_name
	4, // [4:5] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_init() }
func file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_init() {
	if File_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllowedMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleBinding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScopeOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_goTypes,
		DependencyIndexes: file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_depIdxs,
		EnumInfos:         file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_enumTypes,
		MessageInfos:      file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_msgTypes,
		ExtensionInfos:    file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_extTypes,
	}.Build()
	File_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto = out.File
	file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_rawDesc = nil
	file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_goTypes = nil
	file_github_com_kralicky_jobserver_pkg_apis_rbac_v1_rbac_proto_depIdxs = nil
}
